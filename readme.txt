Asteriskの音声をGoogle GCP API TTSで生成します。
翻訳は割と雑ですんでおかしいところがある場合には修正してください。また発話も全部はチェックしていませんので、おかしなところがあるかもしれません。

自分で生成するにはGoogle GCPの契約とAPIの設定、サービスアカウントの作成が必要となります。


この環境はDebian 12(bookworm)とPython3で実行できます。なお、Debianパッケージの依存性を破壊しないため、venv環境を使ってください。venv環境を作成した上でGoogle text to speechのパッケージをインストールします。

# python3 -m venv venv
# source venv/bin/activate
# pip3 install google-cloud-texttospeech

めんどくさいことをしたくない人は .tgzを展開して使ってください。

音声を修正する場合、音声のマスターファイルをCSVで用意します。UTF-8で用意してください。

CSVは
連番,ファイル名,テキスト
の、形式ですが配布しているものが使えます。
CSVファイル名はcore-sounds-ja.csvです。
なお連番に注意してください。この番号は変換履歴の管理に使われています。

変換を実行するとhistory.csvファイルが作成されます。このCSVファイルには元のCSVファイルと同じような内容とタイムスタンプが入っています。音声の一部をマスタのCSVで修正し、再度、スクリプトを実行した場合、このhistroy.csvの内容と比較され、変更のあった音声だけを再生成します。もし、すべての内容を再生成したい場合にはhistory.csvファイルを削除してからスクリプトを実行してください。

音声ファイルは ja/ ディレクトリの下に作成されます。digits/などのサブディレクトリもあわせて作成されます。

=====
＊独自音声を追加する方法
Asteriskの基本音声に含まれない独自音声を追加する場合には以下のように行います。

CSVに以下の例のようなエントリを追加します。

654,local/my-voice,これは独自音声です。

CSVの記述方法通りに、通番,ファイル名,内容 を記述します。この例ではlocal/ディレクトリ下(ja/local)に配置します。配布している一式にはlocal/用のMakefileは入っています。
local/のまま使う場合にはextenでPlayback(local/my-voice)のようにすると再生できます。


2025/08/04 大幅に書き直し。Pythonで一気に生成できるように変更。
